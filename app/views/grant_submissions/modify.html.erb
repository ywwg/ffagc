<div class="container">
  <h1><%= link_to "Firefly Art Grants", :controller => "home", :action => "index" %>: Modify a Grant Proposal</h1>

  <% if artist_logged_in? || admin_logged_in? %>

    <%= semantic_form_for @grant_submission, :html => { :onsubmit => 'return validate();'} do |f| %>
      <fieldset>
        <%= f.input :name, :label => "Name of Piece", :required => false, :validate => true %>
        <li class="string input required stringish" id="grant_submission_name_input">
          <label class="label" for="grant_submission_grant_id">Grant</label>
          <%# NOTE that we allow all grant types regardless of what is open for
              voting or submitting.  This allows artists to move their grant
              from one type to another with minimal changes %>
          <%= collection_select(:grant_submission, :grant_id,
                  Grant.all, :id, :name,
                  {:include_blank => "(select a grant)"},
                  { :onchange => "numericFilter();", :disabled => @grant_change_disable}) %>
        </li>

        <%= f.input :requested_funding_dollars, :label => "Requested Funding ($)", :required => false, :validate => true, :input_html => { :onInput => "numericFilter(this);" }  %>

        <li class="string input required stringish" id="grant_submission_name_input">
          <label class="label" for="grant_submission_proposal">
            <a href="<%= @grant_submission.proposal %>" target="_blank">Current Application PDF:</a>
          </label>
          <input type="test" disabled="true" value="<%= @grant_submission.proposal_identifier %>"/><br/><br/>
          <label class="label" for="grant_submission_proposal">(Optional) Replace PDF:</label>
          <%# Keep extensions in sync with uploader %>
          <%= f.file_field :proposal, :required => false, :validate => true, :accept => ".pdf,.doc,.docx,.txt,.md" %>
        </li>

        <% if admin_logged_in?%>
          <%= f.input :granted_funding_dollars, :label => "Proposed Funding ($)", :validate => true, :input_html => { :onInput => "numericFilter(this);" } %>
          <h6 style="margin-top:-15px; margin-left:50px">(use zero for no funding)</h6>
          <%= f.input :funding_decision, :label => "Finalize Funding Amount", :style => "border:all" %>
          <h6 style="margin-top:-5px; margin-left:50px">Non-zero finalized funding decisions are <i>immediately</i> visible on artist homepage.
            <br>Zero-dollar funding level is always invisible.
            <br>Emails will not be sent when confirming from this page.</h6>
          <%= mail_to @artist_email, "(Email Artist)" %>
        <% end %>

        <br /><br />
        <%= submit_tag("Update Application", class: "button")%><%= submit_tag "Delete Submission", data: { confirm: "Are you sure you want to delete this submission?" }%>
      </fieldset>
    <% end %>
    <br />
  <% else %>
    You must be logged in as an artist to modify a grant proposal. (<%= link_to "Log In", :controller => "artists", :action => "index" %>)
    <br />
    <br />
  <% end %>
  <%= link_to 'Back', :back %>

  <script>
    // http://stackoverflow.com/questions/574941/best-way-to-track-onchange-as-you-type-in-input-type-text/26202266#26202266
    onload = function () {
       var e = document.getElementById('grant_submission_requested_funding_dollars');
       e.oninput = numericFilter;
       e.onpropertychange = e.oninput; // for IE8
       // e.onchange = e.oninput; // FF needs this in <select><option>...
    };

    function numericFilter() {
      var txb = document.getElementById('grant_submission_requested_funding_dollars')
      var max_fund_json = '<%= raw grant_max_funding_dollars_json %>';
      var grant_id = document.getElementById("grant_submission_grant_id").value;
      // If they haven't selected a grant, just go with 1000
      var max_funding = 1000;
      if (grant_id !== "") {
        var max_fund_ob = JSON.parse(max_fund_json);
        // I am bad at javascript.
        for (var i = 0; i < max_fund_ob.length; i++) {
          if (max_fund_ob[i].id == parseInt(grant_id)) {
            max_funding = max_fund_ob[i].max_funding_dollars;
            break;
          }
        }
      }
      txb.value = txb.value.replace(/[^\0-9]/ig, "");
      if(parseInt(txb.value) > max_funding) {
        txb.value = max_funding;
      }
    }

    function validate() {
      errors = 0;

      //round decimals in funding amounts -- whole dollars only
      var requested_funding_dollars = document.getElementById('grant_submission_requested_funding_dollars').value;
      var requested_funding_dollars_num = parseInt(requested_funding_dollars).toFixed(0);
      document.getElementById('grant_submission_requested_funding_dollars').value = requested_funding_dollars_num.toString();

      judge.validate(document.getElementById('grant_submission_name'), {
        valid: function(element) {
          element.style.border = '1px solid green';
        },
        invalid: function(element, messages) {
          element.style.border = '1px solid red';
          alert('name error: ' + messages.join(','));
          errors++;
        }
      });

      if(document.getElementById("grant_submission_grant_id").value != "") {
        document.getElementById("grant_submission_grant_id").style.border = '1px solid green';
      } else {
        errors++;
        alert('error: please select a grant to apply for')
        document.getElementById("grant_submission_grant_id").style.border = '1px solid red';
      }

      judge.validate(document.getElementById('grant_submission_requested_funding_dollars'), {
        valid: function(element) {
          element.style.border = '1px solid green';
        },
        invalid: function(element, messages) {
          element.style.border = '1px solid red';
          alert('requested funding error: ' + messages.join(','));
          errors++;
        }
      });

      // TODO: add validation that the grant selection is in the set of open-submit grants.

      return errors===0;
    }
  </script>
</div>
