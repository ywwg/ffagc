<div class="container">
  <h1><%= link_to "Firefly Art Grants", :controller => "home", :action => "index" %>: Create a Grant Type</h1>

  <% if admin_logged_in? %>
    <%= semantic_form_for @grant, :html => { :onsubmit => 'return validate();'} do |f| %>
    <fieldset>
        <%= f.input :name, :label => "Name of Grant", :required => true, :validate => true %>
        <%= f.input :max_funding_dollars, :label => "Max Funding ($)", :required => true, :validate => true, :input_html => { :onKeyUp => "numericFilter(this);" }  %>
        <li class="string input required stringish" id="grant_vote_start">
          <label class="label" for="grant_submit_start">Submissions Start Date<abbr title="required">*</abbr></label>
          <%= f.date_select :submit_start %>
        </li>
        <li class="string input required stringish" id="grant_vote_end">
          <label class="label" for="grant_submit_end">Submissions End Date<abbr title="required">*</abbr></label>
          <%= f.date_select :submit_end %>
        </li>
        <li class="string input required stringish" id="grant_vote_start">
          <label class="label" for="grant_vote_start">Voting Start Date<abbr title="required">*</abbr></label>
          <%= f.date_select :vote_start %>
        </li>
        <li class="string input required stringish" id="grant_vote_end">
          <label class="label" for="grant_vote_end">Voting End Date<abbr title="required">*</abbr></label>
          <%= f.date_select :vote_end %>
        </li>

        <br /><br />
        <%= submit_tag("Create Grant", class: "button")%></fieldset>
    <% end %>
    <br />
    <%= link_to 'Back', :controller => "admins", :action => "grants" %>
  <% else %>
    You must be logged in as an admin to create grants.
    <br />
    <%= link_to 'Back', :back %>
  <% end %>

  <script>
      function numericFilter(txb) {
          txb.value = txb.value.replace(/[^\0-9]/ig, "");
          if(txb.value > 10000) {
              txb.value = 10000;
          }
      }

  function validate() {
    errors = 0;

    //round decimals in funding amounts -- whole dollars only
    var max_funding_dollars = document.getElementById('grant_max_funding_dollars').value;
    var max_funding_dollars_num = parseInt(max_funding_dollars).toFixed(0);
    document.getElementById('grant_max_funding_dollars').value = max_funding_dollars_num.toString();

    judge.validate(document.getElementById('grant_name'), {
      valid: function(element) {
        element.style.border = '1px solid green';
      },
      invalid: function(element, messages) {
        element.style.border = '1px solid red';
        alert('name error: ' + messages.join(','));
        errors++;
      }
    });

    judge.validate(document.getElementById('grant_max_funding_dollars'), {
      valid: function(element) {
        element.style.border = '1px solid green';
      },
      invalid: function(element, messages) {
        element.style.border = '1px solid red';
        alert('requested funding error: ' + messages.join(','));
        errors++;
      }
    });

    // TODO: add WORKING validation for start and end dates
    // if (document.getElementById("grant_start").value < document.getElementById("grant_end").value)) {
      // document.getElementById("grant_start").style.border = '1px solid green';
      // document.getElementById("grant_end").style.border = '1px solid green';
    // } else {
      // errors++;
      // alert('error: start date must be before end date')
      // document.getElementById("grant_start").style.border = '1px solid red';
      // document.getElementById("grant_end").style.border = '1px solid red';
    // }

    return errors===0;
  }

  </script>
</div>
